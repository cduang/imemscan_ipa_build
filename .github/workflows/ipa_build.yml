# iMemScan iOS应用构建工作流

name: 🚀 构建并发布iMemScan IPA (优化版)

# 定义工作流触发条件
on:
  # 仅允许在GitHub Actions页面手动触发工作流
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: 1.0.0)'
        required: true
        default: 'auto'  # 添加默认值

# 设置工作流权限
permissions:
  contents: write  # 允许写入内容（创建release）
  packages: write  # 允许上传文件

# 定义构建配置
env:
  DESTINATION: 'generic/platform=iOS'  # 构建目标平台
  CONFIGURATION: 'Release'  # 构建配置
  SCHEME: 'iMemScan'  # 项目scheme
  LANGUAGE: 'zh-Hans'  # 设置为简体中文
  
jobs:
  build:
    name: 🏗️ 构建iMemScan IPA
    runs-on: macos-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: 🛠️ 设置Xcode环境
      uses: maxim-lobanov/setup-xcode@v1  # 不指定版本，使用默认最新版本
    
    # 项目不使用CocoaPods，跳过相关步骤
    - name: 设置语言环境
      run: |
        # 设置应用显示名称和语言代码
        DISPLAY_NAME="内存扫描"
        DEV_LANGUAGE="zh-Hans"
        
        # 检查CFBundleDisplayName是否存在，如果不存在则添加
        if ! /usr/libexec/PlistBuddy -c "Print :CFBundleDisplayName" "iMemScan/Info.plist" &>/dev/null; then
            /usr/libexec/PlistBuddy -c "Add :CFBundleDisplayName string $DISPLAY_NAME" "iMemScan/Info.plist"
        else
            /usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName $DISPLAY_NAME" "iMemScan/Info.plist"
        fi
        
        # 设置开发语言
        /usr/libexec/PlistBuddy -c "Set :CFBundleDevelopmentRegion $DEV_LANGUAGE" "iMemScan/Info.plist"
        
        # 设置环境变量
        echo "APP_DISPLAY_NAME=$DISPLAY_NAME" >> $GITHUB_ENV
        echo "DEVELOPMENT_LANGUAGE=$DEV_LANGUAGE" >> $GITHUB_ENV
    
    - name: 🏭 构建项目
      run: |
        # 创建构建目录
        mkdir -p build/ipa
        
        # 设置环境变量
        export LANGUAGE=${{ env.LANGUAGE }}
        
        # 并行构建配置
        CPU_COUNT=$(sysctl -n hw.ncpu)
        echo "使用 $CPU_COUNT 个CPU核心进行构建"
        
        # 构建项目（使用并行编译）
        xcodebuild -project iMemScan.xcodeproj \
                  -scheme $SCHEME \
                  -configuration $CONFIGURATION \
                  -destination "$DESTINATION" \
                  -archivePath $PWD/build/iMemScan.xcarchive \
                  -parallelizeTargets \
                  -jobs $CPU_COUNT \
                  -quiet \
                  clean archive \
                  CODE_SIGNING_ALLOWED=NO \
                  CODE_SIGNING_REQUIRED=NO \
                  CODE_SIGN_IDENTITY="" \
                  PROVISIONING_PROFILE="" \
                  PROVISIONING_PROFILE_SPECIFIER="" \
                  DEVELOPMENT_TEAM="" \
                  PRODUCT_BUNDLE_IDENTIFIER="com.imemscan.app.$LANGUAGE" \
                  PRODUCT_BUNDLE_DISPLAY_NAME="${{ env.APP_DISPLAY_NAME }}" \
                  INFOPLIST_KEY_CFBundleDisplayName="${{ env.APP_DISPLAY_NAME }}" \
                  -UseModernBuildSystem=YES \
                  -clonedSourcePackagesDirPath "$PWD/build/cloned_source_packages"
        
        # 手动创建Payload目录并复制.app文件
        mkdir -p build/ipa/Payload
        cp -r build/iMemScan.xcarchive/Products/Applications/*.app build/ipa/Payload/
        
        # 签名应用
        ldid -Sentitlements.plist build/ipa/Payload/*.app/iMemScan
        
        # 创建带日期和语言后缀的文件名
        BUILD_DATE=$(date +'%Y%m%d')
        BUILD_TIME=$(date +'%H%M%S')
        
        # 创建最终版本号
        FINAL_VERSION="${BUILD_DATE}"
        
        # 创建IPA和TIPA文件
        cd build/ipa
        zip -r "../iMemScanTS.ipa" .
        cd ../..
        
        # 复制为.tipa文件
        cp build/iMemScanTS.ipa build/iMemScanTS.tipa
        
        # 设置IPA路径环境变量
        IPA_FILENAME="iMemScanTS.tipa"
        echo "IPA_PATH=build/${IPA_FILENAME}" >> $GITHUB_ENV
        echo "IPA_FILENAME=${IPA_FILENAME}" >> $GITHUB_ENV
        echo "FINAL_VERSION=${FINAL_VERSION}" >> $GITHUB_ENV
        echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_ENV
        echo "BUILD_TIME=${BUILD_TIME}" >> $GITHUB_ENV
        
        echo "LANGUAGE=${{ env.LANGUAGE }}" >> $GITHUB_ENV
    
    - name: ⬆️ 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: tipa-builds
        path: build/iMemScanTS.tipa
        retention-days: 3  # 缩短保留时间，减少存储使用
        compression-level: 9  # 最高压缩率
    
    - name: 设置输出变量
      id: set_outputs
      run: |
        echo "final_version=$FINAL_VERSION" >> $GITHUB_OUTPUT
        echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT
        echo "build_time=$BUILD_TIME" >> $GITHUB_OUTPUT
    
    - name: 🚀 创建Release并上传TIPA
      id: create_release
      # 添加超时设置
      timeout-minutes: 30
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name || format('v{0}', steps.set_outputs.outputs.build_date) }}
        name: iMemScan ${{ steps.set_outputs.outputs.build_date }} 简体中文版
        files: build/iMemScanTS.tipa
        body: |
          # iMemScan ${{ steps.set_outputs.outputs.build_date }} 简体中文版
          
          ### 构建信息
          - 构建时间: ${{ steps.set_outputs.outputs.build_date }} ${{ steps.set_outputs.outputs.build_time }}
          - 版本: ${{ steps.set_outputs.outputs.build_date }}
          - 自动构建的TrollStore安装包
          
          ### 使用说明
          1. 下载iMemScanTS.tipa文件
          2. 使用TrollStore安装
          3. 确保设备语言设置为简体中文以获得最佳体验
        draft: false
        prerelease: false
        generate_release_notes: true
